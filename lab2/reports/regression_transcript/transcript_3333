# 0
# vsim +notimingchecks +nowarnTSCALE -sva -nocoverage -quiet -sv_seed 3333 -novopt top 
# //  ModelSim SE 6.6d Nov  1 2010 
# //
# //  Copyright 1991-2010 Mentor Graphics Corporation
# //              All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND 
# //  PROPRIETARY INFORMATION WHICH IS THE PROPERTY
# //  OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS
# //  AND IS SUBJECT TO LICENSE TERMS.
# //
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(35): Clocking block output #parent#.intf_lab2.cb.opcode is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(24): Clocking block output #parent#.intf_lab2.cb.operand_a is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(30): Clocking block output #parent#.intf_lab2.cb.operand_b is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(35): Clocking block output #parent#.intf_lab2.cb.opcode is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(24): Clocking block output #parent#.intf_lab2.cb.operand_a is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(30): Clocking block output #parent#.intf_lab2.cb.operand_b is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(116): Clocking block output intf_lab2.cb.opcode is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(117): Clocking block output intf_lab2.cb.operand_a is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(118): Clocking block output intf_lab2.cb.operand_b is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(115): Clocking block output intf_lab2.cb.write_pointer is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_test.sv(124): Clocking block output intf_lab2.cb.read_pointer is not legal in this
# or another expression.
#         Region: /top/test
# 
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Reseting the instruction register...
# first header
# 
# Writing values to register stack...
# Writing to register location 0: 
#   opcode = 4 (SUB)
#   operand_a = 5
#   operand_b = 4
# 
# Printing transaction:                   20 ns 
# Writing to register location 1: 
#   opcode = 3 (ADD)
#   operand_a = 11
#   operand_b = 8
# 
# Printing transaction:                   30 ns 
# Writing to register location 2: 
#   opcode = 2 (PASSB)
#   operand_a = 2
#   operand_b = 5
# 
# Printing transaction:                   40 ns 
# Writing to register location 3: 
#   opcode = 6 (DIV)
#   operand_a = 12
#   operand_b = 2
# 
# Printing transaction:                   50 ns 
# Writing to register location 4: 
#   opcode = 7 (MOD)
#   operand_a = 5
#   operand_b = 11
# 
# Printing transaction:                   60 ns 
# Writing to register location 5: 
#   opcode = 0 (ZERO)
#   operand_a = 11
#   operand_b = 2
# 
# Printing transaction:                   70 ns 
# Writing to register location 6: 
#   opcode = 4 (SUB)
#   operand_a = 6
#   operand_b = 8
# 
# Printing transaction:                   80 ns 
# Writing to register location 7: 
#   opcode = 7 (MOD)
#   operand_a = 9
#   operand_b = 2
# 
# Printing transaction:                   90 ns 
# Writing to register location 8: 
#   opcode = 2 (PASSB)
#   operand_a = 0
#   operand_b = 9
# 
# Printing transaction:                  100 ns 
# Writing to register location 9: 
#   opcode = 3 (ADD)
#   operand_a = 3
#   operand_b = 11
# 
# Printing transaction:                  110 ns 
# 
# Reading back the same register locations written...
# Read from register location 0: 
#   opcode = 4 (SUB)
#   operand_a = 5
#   operand_b = 4
# 
# Printing results:                  125 ns 
# Read from register location 1: 
#   opcode = 3 (ADD)
#   operand_a = 11
#   operand_b = 8
# 
# Printing results:                  135 ns 
# Read from register location 2: 
#   opcode = 2 (PASSB)
#   operand_a = 2
#   operand_b = 5
# 
# Printing results:                  145 ns 
# Read from register location 3: 
#   opcode = 6 (DIV)
#   operand_a = 12
#   operand_b = 2
# 
# Printing results:                  155 ns 
# Read from register location 4: 
#   opcode = 7 (MOD)
#   operand_a = 5
#   operand_b = 11
# 
# Printing results:                  165 ns 
# Read from register location 5: 
#   opcode = 0 (ZERO)
#   operand_a = 11
#   operand_b = 2
# 
# Printing results:                  175 ns 
# Read from register location 6: 
#   opcode = 4 (SUB)
#   operand_a = 6
#   operand_b = 8
# 
# Printing results:                  185 ns 
# Read from register location 7: 
#   opcode = 7 (MOD)
#   operand_a = 9
#   operand_b = 2
# 
# Printing results:                  195 ns 
# Read from register location 8: 
#   opcode = 2 (PASSB)
#   operand_a = 0
#   operand_b = 9
# 
# Printing results:                  205 ns 
# Read from register location 9: 
#   opcode = 3 (ADD)
#   operand_a = 3
#   operand_b = 11
# 
# Printing results:                  215 ns 
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_test.sv(91)
#    Time: 220 ns  Iteration: 2  Instance: /top/test
